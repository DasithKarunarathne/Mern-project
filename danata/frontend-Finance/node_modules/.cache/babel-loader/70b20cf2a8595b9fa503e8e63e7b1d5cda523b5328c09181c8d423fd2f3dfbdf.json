{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dasit\\\\OneDrive\\\\Documents\\\\GitHub\\\\Mern-project\\\\frontend\\\\frontend-Finance\\\\src\\\\components\\\\PettyCash.js\\\\TransactionTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport UpdateTransactionForm from \"./UpdateTransactionForm\";\nimport { deletePettyCash } from \"../services/api\";\nimport { Table, TableCell, TableHead, TableRow, TableBody, Button, Dialog, DialogTitle, DialogContent } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransactionTable = ({\n  transactions,\n  onUpdate\n}) => {\n  _s();\n  const [open, setOpen] = useState(false); // open/close the dialog\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\n  const handleDelete = async id => {\n    try {\n      await deletePettyCash(id); // calls the deletePettyCash function from the api.js file\n      onUpdate(); // refresh the transaction list\n    } catch (error) {\n      console.error(\"Error deleting transaction: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: new Date(transaction.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: transaction.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: transaction.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: transaction.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: transaction.category || '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setSelectedTransaction(transaction);\n                setOpen(true);\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleDelete(transaction._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, transaction._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: () => setOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(UpdateTransactionForm, {\n          transaction: selectedTransaction,\n          onUpdate: () => {\n            setOpen(false);\n            onUpdate();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(TransactionTable, \"v5mrMMYj7AQ7htscWKswv0wdyW8=\");\n_c = TransactionTable;\nexport default TransactionTable;\nvar _c;\n$RefreshReg$(_c, \"TransactionTable\");","map":{"version":3,"names":["React","useState","UpdateTransactionForm","deletePettyCash","Table","TableCell","TableHead","TableRow","TableBody","Button","Dialog","DialogTitle","DialogContent","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactionTable","transactions","onUpdate","_s","open","setOpen","selectedTransaction","setSelectedTransaction","handleDelete","id","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","transaction","Date","date","toLocaleDateString","description","amount","type","category","onClick","_id","onClose","_c","$RefreshReg$"],"sources":["C:/Users/dasit/OneDrive/Documents/GitHub/Mern-project/frontend/frontend-Finance/src/components/PettyCash.js/TransactionTable.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport UpdateTransactionForm from \"./UpdateTransactionForm\";\r\nimport { deletePettyCash } from \"../services/api\";\r\nimport { Table, TableCell, TableHead, TableRow, TableBody, Button, Dialog, DialogTitle, DialogContent } from \"@mui/material\";\r\n\r\nconst TransactionTable = ({ transactions, onUpdate }) => {\r\n    const [open, setOpen] = useState(false); // open/close the dialog\r\n    const [selectedTransaction, setSelectedTransaction] = useState(null);\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await deletePettyCash(id); // calls the deletePettyCash function from the api.js file\r\n            onUpdate(); // refresh the transaction list\r\n        } catch (error) {\r\n            console.error(\"Error deleting transaction: \", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Date</TableCell>\r\n                        <TableCell>Description</TableCell>\r\n                        <TableCell>Amount</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Category</TableCell>\r\n                        <TableCell>Actions</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {transactions.map((transaction) => (\r\n                        <TableRow key={transaction._id}>\r\n                            <TableCell>{new Date(transaction.date).toLocaleDateString()}</TableCell>\r\n                            <TableCell>{transaction.description}</TableCell>\r\n                            <TableCell>{transaction.amount}</TableCell>\r\n                            <TableCell>{transaction.type}</TableCell>\r\n                            <TableCell>{transaction.category || '-'}</TableCell>\r\n                            <TableCell>\r\n                                <Button\r\n                                    onClick={() => {\r\n                                        setSelectedTransaction(transaction);\r\n                                        setOpen(true);\r\n                                    }}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                                <Button onClick={() => handleDelete(transaction._id)}>Delete</Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n            <Dialog open={open} onClose={() => setOpen(false)}>\r\n                <DialogTitle>Edit Transaction</DialogTitle>\r\n                <DialogContent>\r\n                    <UpdateTransactionForm\r\n                        transaction={selectedTransaction}\r\n                        onUpdate={() => {\r\n                            setOpen(false);\r\n                            onUpdate();\r\n                        }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TransactionTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}