{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dasit\\\\OneDrive\\\\Documents\\\\GitHub\\\\Mern-project\\\\frontend\\\\frontend-Finance\\\\src\\\\components\\\\SalaryTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Salarytable = () => {\n  _s();\n  const [month, setMonth] = useState(Date.now().toISOString().slice(0, 7)); // Default to current month\n  const [salaries, setSalaries] = useState([]);\n\n  // Memoize fetchSalaries to prevent recreation on every render\n  const fetchSalaries = useCallback(async () => {\n    if (!month) {\n      alert(\"Please select a month\");\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:4000/api/salary/${month}`);\n      setSalaries(response.data); // Array directly from getsalaries\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error fetching salaries\", error);\n      alert(\"Failed to fetch salaries: \" + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n    }\n  }, [month]); // month is a dependency of fetchSalaries\n\n  useEffect(() => {\n    fetchSalaries();\n  }, [fetchSalaries]); // Now fetchSalaries is stable and a valid dependency\n\n  const genSalaries = async () => {\n    if (!month) {\n      alert(\"Please select a month to generate salaries\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:4000/api/salary/calculate\", {\n        month\n      });\n      setSalaries(response.data.salaries || []);\n      alert(response.data.message);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Error generating salaries\", error);\n      alert(\"Failed to generate salaries: \" + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message));\n    }\n  };\n  const markSalaryPaid = async salaryId => {\n    try {\n      await axios.put(`http://localhost:4000/api/salary/markPaid/${salaryId}`);\n      alert(\"Salary marked as paid\");\n      fetchSalaries();\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"Error marking salary as paid\", error);\n      alert(\"Failed to mark salary as paid: \" + (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"top-Heading\",\n      children: \"Salary Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"month\",\n        value: month,\n        onChange: e => setMonth(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchSalaries,\n        children: \"Fetch Salaries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: genSalaries,\n        children: \"Generate Salaries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Basic Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Overtime Pay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"EPF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ETF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Net Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: salaries.map(salary => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.employeeId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.employeeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.basicSalary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: (salary.overtimeHours * salary.overtimeRate).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.epf.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.etf.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.netSalary.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: salary.status === \"Pending\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => markSalaryPaid(salary._id),\n              children: \"Mark as Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Paid on \", new Date(salary.paymentDate).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, salary._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Salarytable, \"2sfaOfJd05eOFmtl0U5PCDHMWNg=\");\n_c = Salarytable;\nexport default Salarytable;\nvar _c;\n$RefreshReg$(_c, \"Salarytable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","Salarytable","_s","month","setMonth","Date","now","toISOString","slice","salaries","setSalaries","fetchSalaries","alert","response","get","data","error","_error$response","_error$response$data","console","message","genSalaries","post","_error$response2","_error$response2$data","markSalaryPaid","salaryId","put","_error$response3","_error$response3$data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","salary","employeeId","employeeName","basicSalary","overtimeHours","overtimeRate","toFixed","epf","etf","netSalary","status","_id","paymentDate","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/dasit/OneDrive/Documents/GitHub/Mern-project/frontend/frontend-Finance/src/components/SalaryTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Salarytable = () => {\r\n    const [month, setMonth] = useState(Date.now().toISOString().slice(0, 7)); // Default to current month\r\n    const [salaries, setSalaries] = useState([]);\r\n\r\n    // Memoize fetchSalaries to prevent recreation on every render\r\n    const fetchSalaries = useCallback(async () => {\r\n        if (!month) {\r\n            alert(\"Please select a month\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`http://localhost:4000/api/salary/${month}`);\r\n            setSalaries(response.data); // Array directly from getsalaries\r\n        } catch (error) {\r\n            console.error(\"Error fetching salaries\", error);\r\n            alert(\"Failed to fetch salaries: \" + (error.response?.data?.message || error.message));\r\n        }\r\n    }, [month]); // month is a dependency of fetchSalaries\r\n\r\n    useEffect(() => {\r\n        fetchSalaries();\r\n    }, [fetchSalaries]); // Now fetchSalaries is stable and a valid dependency\r\n\r\n    const genSalaries = async () => {\r\n        if (!month) {\r\n            alert(\"Please select a month to generate salaries\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(\"http://localhost:4000/api/salary/calculate\", { month });\r\n            setSalaries(response.data.salaries || []);\r\n            alert(response.data.message);\r\n        } catch (error) {\r\n            console.error(\"Error generating salaries\", error);\r\n            alert(\"Failed to generate salaries: \" + (error.response?.data?.message || error.message));\r\n        }\r\n    };\r\n\r\n    const markSalaryPaid = async (salaryId) => {\r\n        try {\r\n            await axios.put(`http://localhost:4000/api/salary/markPaid/${salaryId}`);\r\n            alert(\"Salary marked as paid\");\r\n            fetchSalaries();\r\n        } catch (error) {\r\n            console.error(\"Error marking salary as paid\", error);\r\n            alert(\"Failed to mark salary as paid: \" + (error.response?.data?.message || error.message));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"top-Heading\">Salary Management</h2>\r\n            <div>\r\n                <input\r\n                    type=\"month\"\r\n                    value={month}\r\n                    onChange={(e) => setMonth(e.target.value)}\r\n                />\r\n                <button onClick={fetchSalaries}>Fetch Salaries</button>\r\n                <button onClick={genSalaries}>Generate Salaries</button>\r\n            </div>\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Employee ID</th>\r\n                        <th>Employee Name</th>\r\n                        <th>Month</th>\r\n                        <th>Basic Salary</th>\r\n                        <th>Overtime Pay</th>\r\n                        <th>EPF</th>\r\n                        <th>ETF</th>\r\n                        <th>Net Salary</th>\r\n                        <th>Status</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {salaries.map((salary) => (\r\n                        <tr key={salary._id}>\r\n                            <td>{salary.employeeId}</td>\r\n                            <td>{salary.employeeName}</td>\r\n                            <td>{salary.month}</td>\r\n                            <td>{salary.basicSalary}</td>\r\n                            <td>{(salary.overtimeHours * salary.overtimeRate).toFixed(2)}</td>\r\n                            <td>{salary.epf.toFixed(2)}</td>\r\n                            <td>{salary.etf.toFixed(2)}</td>\r\n                            <td>{salary.netSalary.toFixed(2)}</td>\r\n                            <td>{salary.status}</td>\r\n                            <td>\r\n                                {salary.status === \"Pending\" ? (\r\n                                    <button onClick={() => markSalaryPaid(salary._id)}>Mark as Paid</button>\r\n                                ) : (\r\n                                    <span>Paid on {new Date(salary.paymentDate).toLocaleDateString()}</span>\r\n                                )}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Salarytable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}